module.exports = {
  settings: {
    react: {
      pragma: 'React',
      version: '18.0.0',
    },
  },
  env: {
    browser: true,
    node: true,
    es2021: true,
  },
  extends: ['eslint:recommended', 'plugin:react/recommended', 'plugin:prettier/recommended'],
  parserOptions: {
    ecmaFeatures: {
      jsx: true,
    },
    ecmaVersion: 'latest',
    sourceType: 'module',
  },
  plugins: ['react'],
  rules: {
    // ESLint https://eslint.org/docs/rules/
    'prettier/prettier': 0,
    'strict': ['error', 'global'],
    'quotes': ['error', 'single', { allowTemplateLiterals: true }],
    'jsx-quotes': ['error', 'prefer-single'],
    'camelcase': 'error',
    'no-var': 'error',
    'prefer-const': 'error',
    'one-var': ['error', 'never'],
    'no-unused-vars': 'error',
    'multiline-comment-style': ['error', 'bare-block'],
    'spaced-comment': ['error', 'always', { block: { balanced: true } }],
    'no-multiple-empty-lines': ['error', { max: 1, maxEOF: 1 }],
    'semi': ['error', 'always'],
    'semi-style': ['error', 'last'],
    'semi-spacing': ['error', { before: false, after: true }],
    'no-extra-semi': 'error',
    'comma-style': ['error', 'last'],
    'comma-spacing': ['error', { before: false, after: true }],
    'comma-dangle': ['error', 'always-multiline'],
    'no-multi-assign': 'error',
    'eqeqeq': 'error',
    'yoda': 'error',
    'no-multi-spaces': 'error',
    'no-whitespace-before-property': 'error',
    'no-empty-pattern': 'error',
    'no-unneeded-ternary': 'error',
    'no-nested-ternary': 'error',
    'no-array-constructor': 'error',
    'no-new-object': 'error',
    'no-new-wrappers': 'error',
    'no-extra-boolean-cast': ['error', { enforceForLogicalOperands: true }],
    'newline-per-chained-call': 'error',
    'brace-style': ['error', '1tbs', { allowSingleLine: true }],
    'arrow-parens': ['error', 'always'],
    'array-bracket-spacing': ['error', 'never'],
    'arrow-spacing': 'error',
    'keyword-spacing': 'error',
    'block-spacing': 'error',
    'func-call-spacing': ['error', 'never'],
    'object-curly-spacing': ['error', 'always'],
    'space-before-blocks': 'error',
    'space-before-function-paren': [
      'error',
      { anonymous: 'never', named: 'never', asyncArrow: 'always' },
    ],
    'space-in-parens': ['error', 'never'],
    'space-infix-ops': 'error',
    'template-curly-spacing': ['error', 'never'],
    // eslint-plugin-react https://github.com/jsx-eslint/eslint-plugin-react
    'react/react-in-jsx-scope': 'off',
    'react/jsx-filename-extension': 2,
    'react/jsx-pascal-case': 2,
    'react/no-unused-state': 'error',
    'react/destructuring-assignment': ['error', 'always'],
    'react/jsx-no-duplicate-props': 'error',
    'react/prop-types': 0,
    'react/jsx-equals-spacing': ['error', 'never'],
    'react/jsx-closing-bracket-location': [
      'error',
      { nonEmpty: 'tag-aligned', selfClosing: 'tag-aligned' },
    ],
    'react/no-deprecated': 'error',
    'react/jsx-wrap-multilines': 'error',
    'react/jsx-tag-spacing': [
      'error',
      {
        closingSlash: 'never',
        beforeSelfClosing: 'always',
        afterOpening: 'never',
        beforeClosing: 'never',
      },
    ],
    'react/jsx-props-no-multi-spaces': 'error',
    'react/jsx-no-useless-fragment': 'error',
    'react/jsx-no-script-url': 'error',
    'react/jsx-max-props-per-line': [2, { when: 'multiline' }],
    'react/jsx-indent-props': [2, 2],
  },
};
